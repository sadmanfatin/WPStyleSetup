package model.view;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Sep 05 08:55:04 BDT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SamVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrgId {
            public Object get(SamVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        SystemId {
            public Object get(SamVORowImpl obj) {
                return obj.getSystemId();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setSystemId((Number)value);
            }
        }
        ,
        SamVersion {
            public Object get(SamVORowImpl obj) {
                return obj.getSamVersion();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setSamVersion((Number)value);
            }
        }
        ,
        UnitSectionId {
            public Object get(SamVORowImpl obj) {
                return obj.getUnitSectionId();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setUnitSectionId((Number)value);
            }
        }
        ,
        SectionName {
            public Object get(SamVORowImpl obj) {
                return obj.getSectionName();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setSectionName((String)value);
            }
        }
        ,
        UnitProcessId {
            public Object get(SamVORowImpl obj) {
                return obj.getUnitProcessId();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setUnitProcessId((Number)value);
            }
        }
        ,
        ProcessName {
            public Object get(SamVORowImpl obj) {
                return obj.getProcessName();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setProcessName((String)value);
            }
        }
        ,
        SeqNo {
            public Object get(SamVORowImpl obj) {
                return obj.getSeqNo();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setSeqNo((Number)value);
            }
        }
        ,
        BatchQty {
            public Object get(SamVORowImpl obj) {
                return obj.getBatchQty();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setBatchQty((Number)value);
            }
        }
        ,
        BatchTime {
            public Object get(SamVORowImpl obj) {
                return obj.getBatchTime();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setBatchTime((Number)value);
            }
        }
        ,
        Sam {
            public Object get(SamVORowImpl obj) {
                return obj.getSam();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setSam((Number)value);
            }
        }
        ,
        WpProcessId {
            public Object get(SamVORowImpl obj) {
                return obj.getWpProcessId();
            }

            public void put(SamVORowImpl obj, Object value) {
                obj.setWpProcessId((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SamVORowImpl object);

        public abstract void put(SamVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SYSTEMID = AttributesEnum.SystemId.index();
    public static final int SAMVERSION = AttributesEnum.SamVersion.index();
    public static final int UNITSECTIONID = AttributesEnum.UnitSectionId.index();
    public static final int SECTIONNAME = AttributesEnum.SectionName.index();
    public static final int UNITPROCESSID = AttributesEnum.UnitProcessId.index();
    public static final int PROCESSNAME = AttributesEnum.ProcessName.index();
    public static final int SEQNO = AttributesEnum.SeqNo.index();
    public static final int BATCHQTY = AttributesEnum.BatchQty.index();
    public static final int BATCHTIME = AttributesEnum.BatchTime.index();
    public static final int SAM = AttributesEnum.Sam.index();
    public static final int WPPROCESSID = AttributesEnum.WpProcessId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SamVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SystemId.
     * @return the SystemId
     */
    public Number getSystemId() {
        return (Number) getAttributeInternal(SYSTEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SystemId.
     * @param value value to set the  SystemId
     */
    public void setSystemId(Number value) {
        setAttributeInternal(SYSTEMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SamVersion.
     * @return the SamVersion
     */
    public Number getSamVersion() {
        return (Number) getAttributeInternal(SAMVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SamVersion.
     * @param value value to set the  SamVersion
     */
    public void setSamVersion(Number value) {
        setAttributeInternal(SAMVERSION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitSectionId.
     * @return the UnitSectionId
     */
    public Number getUnitSectionId() {
        return (Number) getAttributeInternal(UNITSECTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitSectionId.
     * @param value value to set the  UnitSectionId
     */
    public void setUnitSectionId(Number value) {
        setAttributeInternal(UNITSECTIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SectionName.
     * @return the SectionName
     */
    public String getSectionName() {
        return (String) getAttributeInternal(SECTIONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SectionName.
     * @param value value to set the  SectionName
     */
    public void setSectionName(String value) {
        setAttributeInternal(SECTIONNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitProcessId.
     * @return the UnitProcessId
     */
    public Number getUnitProcessId() {
        return (Number) getAttributeInternal(UNITPROCESSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitProcessId.
     * @param value value to set the  UnitProcessId
     */
    public void setUnitProcessId(Number value) {
        setAttributeInternal(UNITPROCESSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProcessName.
     * @return the ProcessName
     */
    public String getProcessName() {
        return (String) getAttributeInternal(PROCESSNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProcessName.
     * @param value value to set the  ProcessName
     */
    public void setProcessName(String value) {
        setAttributeInternal(PROCESSNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SeqNo.
     * @return the SeqNo
     */
    public Number getSeqNo() {
        return (Number) getAttributeInternal(SEQNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SeqNo.
     * @param value value to set the  SeqNo
     */
    public void setSeqNo(Number value) {
        setAttributeInternal(SEQNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BatchQty.
     * @return the BatchQty
     */
    public Number getBatchQty() {
        return (Number) getAttributeInternal(BATCHQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BatchQty.
     * @param value value to set the  BatchQty
     */
    public void setBatchQty(Number value) {
        setAttributeInternal(BATCHQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BatchTime.
     * @return the BatchTime
     */
    public Number getBatchTime() {
        return (Number) getAttributeInternal(BATCHTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BatchTime.
     * @param value value to set the  BatchTime
     */
    public void setBatchTime(Number value) {
        setAttributeInternal(BATCHTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Sam.
     * @return the Sam
     */
    public Number getSam() {
        return (Number) getAttributeInternal(SAM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Sam.
     * @param value value to set the  Sam
     */
    public void setSam(Number value) {
        setAttributeInternal(SAM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WpProcessId.
     * @return the WpProcessId
     */
    public Number getWpProcessId() {
        return (Number) getAttributeInternal(WPPROCESSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WpProcessId.
     * @param value value to set the  WpProcessId
     */
    public void setWpProcessId(Number value) {
        setAttributeInternal(WPPROCESSID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
